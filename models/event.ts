/*
Discovery API

The Ticketmaster Discovery API allows you to search for events, attractions, or venues.

The version of the OpenAPI document: v2


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Accessibility } from './accessibility';
import { Classification } from './classification';
import { EventDates } from './event-dates';
import { EventSalesDates } from './event-sales-dates';
import { ExternalLink } from './external-link';
import { Image } from './image';
import { Location } from './location';
import { Outlet } from './outlet';
import { Place } from './place';
import { PriceRange } from './price-range';
import { Product } from './product';
import { Promoter } from './promoter';
import { SeatMap } from './seat-map';

/**
 * Event
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * Any information related to the event
     * @type {string}
     * @memberof Event
     */
    'info'?: string;
    /**
     * Description\'s of the entity
     * @type {string}
     * @memberof Event
     */
    'description'?: string;
    /**
     * 
     * @type {Accessibility}
     * @memberof Event
     */
    'accessibility'?: Accessibility;
    /**
     * Additional information of the entity
     * @type {string}
     * @memberof Event
     */
    'additionalInfo'?: string;
    /**
     * Event\'s classifications
     * @type {Array<Classification>}
     * @memberof Event
     */
    'classifications'?: Array<Classification>;
    /**
     * 
     * @type {EventDates}
     * @memberof Event
     */
    'dates'?: EventDates;
    /**
     * 
     * @type {number}
     * @memberof Event
     */
    'distance'?: number;
    /**
     * List of external links
     * @type {{ [key: string]: Array<ExternalLink>; }}
     * @memberof Event
     */
    'externalLinks'?: { [key: string]: Array<ExternalLink>; };
    /**
     * Unique id of the entity in the discovery API
     * @type {string}
     * @memberof Event
     */
    'id': string;
    /**
     * Images of the entity
     * @type {Set<Image>}
     * @memberof Event
     */
    'images'?: Set<Image>;
    /**
     * Locale in which the content is returned
     * @type {string}
     * @memberof Event
     */
    'locale'?: string;
    /**
     * 
     * @type {Location}
     * @memberof Event
     */
    'location'?: Location;
    /**
     * Name of the entity
     * @type {string}
     * @memberof Event
     */
    'name'?: string;
    /**
     * Related outlets informations
     * @type {Array<Outlet>}
     * @memberof Event
     */
    'outlets'?: Array<Outlet>;
    /**
     * 
     * @type {Place}
     * @memberof Event
     */
    'place'?: Place;
    /**
     * Any notes related to the event
     * @type {string}
     * @memberof Event
     */
    'pleaseNote'?: string;
    /**
     * Price ranges of this event
     * @type {Set<PriceRange>}
     * @memberof Event
     */
    'priceRanges'?: Set<PriceRange>;
    /**
     * Related products informations
     * @type {Array<Product>}
     * @memberof Event
     */
    'products'?: Array<Product>;
    /**
     * 
     * @type {Promoter}
     * @memberof Event
     */
    'promoter'?: Promoter;
    /**
     * Event\'s promoters
     * @type {Array<Promoter>}
     * @memberof Event
     */
    'promoters'?: Array<Promoter>;
    /**
     * 
     * @type {EventSalesDates}
     * @memberof Event
     */
    'sales'?: EventSalesDates;
    /**
     * 
     * @type {SeatMap}
     * @memberof Event
     */
    'seatmap'?: SeatMap;
    /**
     * Indicate if this is a test entity, by default test entities won\'t appear in discovery API
     * @type {boolean}
     * @memberof Event
     */
    'test'?: boolean;
    /**
     * Type of the entity
     * @type {string}
     * @memberof Event
     */
    'type': EventTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    'units'?: string;
    /**
     * URL of a web site detail page of the entity
     * @type {string}
     * @memberof Event
     */
    'url'?: string;
}

type EventTypeEnum = 'event' | 'venue' | 'attraction'


