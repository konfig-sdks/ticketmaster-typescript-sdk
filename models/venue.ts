/*
Discovery API

The Ticketmaster Discovery API allows you to search for events, attractions, or venues.

The version of the OpenAPI document: v2


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Address } from './address';
import { City } from './city';
import { Country } from './country';
import { Dma } from './dma';
import { ExternalLink } from './external-link';
import { Image } from './image';
import { Location } from './location';
import { Market } from './market';
import { Social } from './social';
import { State } from './state';
import { VenueBoxOfficeInfo } from './venue-box-office-info';
import { VenueGeneralInfo } from './venue-general-info';

/**
 * Venue
 * @export
 * @interface Venue
 */
export interface Venue {
    /**
     * Description\'s of the entity
     * @type {string}
     * @memberof Venue
     */
    'description'?: string;
    /**
     * Venue accessible seating detail
     * @type {string}
     * @memberof Venue
     */
    'accessibleSeatingDetail'?: string;
    /**
     * Additional information of the entity
     * @type {string}
     * @memberof Venue
     */
    'additionalInfo'?: string;
    /**
     * 
     * @type {Address}
     * @memberof Venue
     */
    'address'?: Address;
    /**
     * 
     * @type {VenueBoxOfficeInfo}
     * @memberof Venue
     */
    'boxOfficeInfo'?: VenueBoxOfficeInfo;
    /**
     * 
     * @type {City}
     * @memberof Venue
     */
    'city'?: City;
    /**
     * 
     * @type {Country}
     * @memberof Venue
     */
    'country'?: Country;
    /**
     * Default currency of ticket prices for events in this venue
     * @type {string}
     * @memberof Venue
     */
    'currency'?: string;
    /**
     * 
     * @type {number}
     * @memberof Venue
     */
    'distance'?: number;
    /**
     * The list of associated DMAs (Designated Market Areas) of the venue
     * @type {Array<Dma>}
     * @memberof Venue
     */
    'dma'?: Array<Dma>;
    /**
     * List of external links
     * @type {{ [key: string]: Array<ExternalLink>; }}
     * @memberof Venue
     */
    'externalLinks'?: { [key: string]: Array<ExternalLink>; };
    /**
     * 
     * @type {VenueGeneralInfo}
     * @memberof Venue
     */
    'generalInfo'?: VenueGeneralInfo;
    /**
     * Unique id of the entity in the discovery API
     * @type {string}
     * @memberof Venue
     */
    'id': string;
    /**
     * Images of the entity
     * @type {Set<Image>}
     * @memberof Venue
     */
    'images'?: Set<Image>;
    /**
     * Locale in which the content is returned
     * @type {string}
     * @memberof Venue
     */
    'locale'?: string;
    /**
     * 
     * @type {Location}
     * @memberof Venue
     */
    'location'?: Location;
    /**
     * Markets of the venue
     * @type {Array<Market>}
     * @memberof Venue
     */
    'markets'?: Array<Market>;
    /**
     * Name of the entity
     * @type {string}
     * @memberof Venue
     */
    'name'?: string;
    /**
     * Venue parking info
     * @type {string}
     * @memberof Venue
     */
    'parkingDetail'?: string;
    /**
     * Postal code / zipcode of the venue
     * @type {string}
     * @memberof Venue
     */
    'postalCode'?: string;
    /**
     * 
     * @type {Social}
     * @memberof Venue
     */
    'social'?: Social;
    /**
     * 
     * @type {State}
     * @memberof Venue
     */
    'state'?: State;
    /**
     * Indicate if this is a test entity, by default test entities won\'t appear in discovery API
     * @type {boolean}
     * @memberof Venue
     */
    'test'?: boolean;
    /**
     * Timezone of the venue
     * @type {string}
     * @memberof Venue
     */
    'timezone'?: string;
    /**
     * Type of the entity
     * @type {string}
     * @memberof Venue
     */
    'type': VenueTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Venue
     */
    'units'?: string;
    /**
     * number of upcoming events
     * @type {{ [key: string]: number; }}
     * @memberof Venue
     */
    'upcomingEvents'?: { [key: string]: number; };
    /**
     * URL of a web site detail page of the entity
     * @type {string}
     * @memberof Venue
     */
    'url'?: string;
}

type VenueTypeEnum = 'event' | 'venue' | 'attraction'


